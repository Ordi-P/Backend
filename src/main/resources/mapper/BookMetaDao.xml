<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xdu.backend.Dao.BookMetaDao">

    <resultMap id="BookInfoMap" type="xdu.backend.vo.BookInfo">
        <result column="book_name" property="bookName"/>
        <result column="book_author" property="bookAuthor"/>
        <result column="category" property="category"/>
        <result column="location" property="location"/>
        <result column="isbn_number" property="isbnNumber"/>
        <result column="amount" property="amount"/>
        <result column="available_number" property="available"/>
    </resultMap>


    <select id="queryBookInfoByISBN" parameterType="String" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where bm.isbn_number = #{isbnNumber} and b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <select id="queryBookMetaByISBNCode" parameterType="String" resultType="xdu.backend.pojo.BookMeta">
        select *
        from book_meta
        where isbn_code like concat(concat('%', #{isbnCode}), '%')
    </select>

    <select id="queryBookInfoByName" parameterType="String" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where bm.book_name like concat(concat('%', #{bookName}), '%') and b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <select id="queryBookInfoByAuthor" parameterType="String" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where bm.book_author like concat(concat('%', #{author}), '%') and b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <select id="queryBookInfoByCategory" parameterType="String" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where bm.category like concat(concat('%', #{category}), '%') and b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <select id="queryBookInfoByISBNNumber" parameterType="String" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where bm.isbn_number like concat(concat('%', #{isbnNumber}), '%') and b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <select id="getAllBookInfos" resultMap="BookInfoMap">
        select bookinfo.book_name, bookinfo.book_author, bookinfo.category, bookinfo.location, bookinfo.isbn_number, bookinfo.amount, sum(available) as available_number
        from (
                 select bm.book_name, bm.book_author, bm.category, bm.location, bm.isbn_number, bm.amount, b.available
                 from book_meta bm
                        left join book b
                        on b.isbn_number = bm.isbn_number
                 where b.abandoned = false
             ) as bookinfo
        group by isbn_number;
    </select>

    <update id="updateBookMeta">
        update book_meta
        set amount = amount + #{deltaNum}
        where isbn_number = #{isbnNumber}
    </update>

    <insert id="insertBookMeta">
        insert into book_meta
        values (#{isbnCode}, #{isbnNumber}, #{bookName}, #{bookAuthor}, #{category}, #{location}, #{amount})
    </insert>

    <delete id="deleteBookMeta">
        delete from book_meta
        where isbn_code = #{isbn_code}
    </delete>

    <select id="queryBookMetaNumber" resultType="java.lang.Integer">
        select count(*)
        from book_meta
        where amount > 0
    </select>

    <update id="updateLocationAndCategoryByISBNNumber">
        update book_meta
        set location = #{location} and category = #{category}
        where isbn_number = #{isbnNumber}
    </update>

</mapper>
